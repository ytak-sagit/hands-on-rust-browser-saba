name: Run Unit Test for Rust

run-name: Run Unit Test for Rust

on: push

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest

    outputs:
      members: ${{ steps.extract_workspace_members.outputs.members }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # saba/ 以下のディレクトリを抽出
      - name: Extract workspace members
        id: extract_workspace_members
        run: |
          members=$(find saba -maxdepth 1 -type d | grep -vE "^saba$" | jq -c -R | jq -c -s '{ "members": . }')
          echo "members=${members}" > "${GITHUB_OUTPUT}"

  unit-test:
    runs-on: ubuntu-latest

    needs: [setup]

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup.outputs.members) }}

    defaults:
      run:
        working-directory: ${{ matrix.members }}

    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: "-Dwarnings"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust caching
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ${{ matrix.projects }}

      - name: Run unit test
        run: cargo test --verbose
